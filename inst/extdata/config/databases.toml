Title = "annovarR database annotation configuration file"

[avsnp]
versions = ["avsnp138", "avsnp142", "avsnp144", "avsnp147", "avsnp147.common"]
default.dbtype = ["sqlite", "sqlite", "sqlite", "sqlite", "sqlite"]
func = "annotation.auto"

need.cols = ["chr", "start", "end", "ref", "alt"]
return.col.names = "@>@str_replace('{{anno.name}}', 'avsnp', 'avSNP')@<@"
db.col.order = [1, 2, 3, 4, 5]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start", "end", "ref", "alt"]
return.col.index = 6
format.dat.fun = "format.cols"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb"

[rs2pos]
versions = ["rs2pos138", "rs2pos142", "rs2pos144", "rs2pos147"]
default.dbtype = ["sqlite", "sqlite", "sqlite", "sqlite"]
func = "annotation.auto"

need.cols = ["rs"]
return.col.names = ["chr", "start", "end", "ref", "alt"]
db.col.order = 6
index.cols = ["rs"]
matched.cols = ["rs"]
return.col.index = [1, 2, 3, 4, 5]
format.dat.fun = "format.cols"
setdb.fun = "set.db.rs2pos"
set.table.fun = "set.table.rs2pos"
format.db.tb.fun = "format.db.tb.unique"

[cosmic]
versions = ["cosmic70", "cosmic81"]
func = "annotation.auto"
default.dbtype = ["sqlite", "sqlite"]

need.cols = ["chr", "start", "end", "ref", "alt"]
return.col.names = "@>@str_replace('{{anno.name}}', 'cosmic', 'COSMIC_')@<@"
db.col.order = [1, 2, 3, 4, 5]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start", "end", "ref", "alt"]
return.col.index = 6
format.dat.fun = "format.cols"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb"

[1000g]
versions = ["1000g2015aug_all", "1000g2015aug_afr", "1000g2015aug_amr", 
            "1000g2015aug_eas", "1000g2015aug_eur", "1000g2015aug_sas"]
func = "annotation.auto"
default.dbtype = ["sqlite", "sqlite", "sqlite", "sqlite", "sqlite", "sqlite"]

need.cols = ["chr", "start", "end", "ref", "alt"]
return.col.names = "{{anno.name}}"
db.col.order = [1, 2, 3, 4, 5]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start", "end", "ref", "alt"]
return.col.index = 7
format.dat.fun = "format.cols"
setdb.fun = "set.1000g.db"
set.table.fun = "set.1000g.table"
format.db.tb.fun = "format.1000g.db.tb"

[radar]
versions = ["RADAR2"]
func = "annotation.auto"
default.dbtype = ["sqlite"]

need.cols = ["chr", "start"]
return.col.names = "RADAR2.is.alu"
db.col.order = [1, 2]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start"]
return.col.index = 7
format.dat.fun = "format.cols"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb"

[darned]
versions = ["DARNED"]
func = "annotation.auto"
default.dbtype = ["sqlite"]

need.cols = ["chr", "start"]
return.col.names = "DARNED.in.rna"
db.col.order = [1, 2]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start"]
return.col.index = 5
format.dat.fun = "format.cols"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb"

[rediportal]
versions = ["REDIportal"]
func = "annotation.auto"
default.dbtype = ["sqlite"]

need.cols = ["chr", "start", "ref", "alt"]
return.col.names = "REDIportal"
db.col.order = [1, 2, 3, 4]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start", "ref", "alt"]
return.col.index = 6
format.dat.fun = "format.cols"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb"

[normal_pool]
versions = ['2016sih_wes_ball', '2016sih_wes_tall', '2016sih_wes_nkt', '2016sih_wgs_nkt', '2016sih_wgs_dlbcl']
func = "annotation.auto"
default.dbtype = ["txt", "txt", "txt", "txt", "txt"]

need.cols = ["chr", "start", "end", "ref", "alt"]
return.col.names = "{{anno.name}}"
db.col.order = [1, 2, 3, 4, 5]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start", "end", "ref", "alt"]
return.col.index = 6
format.dat.fun = "format.cols"
setdb.fun = "set.sih.normal.pool.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb"

[clinvar]
versions = ["clinvar_20170130"]
func = "annotation.auto"
default.dbtype = ["sqlite"]

need.cols = ["chr", "start", "end", "ref", "alt"]
return.col.names = "{{anno.name}}"
db.col.order = [1, 2, 3, 4, 5]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start", "end", "ref", "alt"]
return.col.index = 6
format.dat.fun = "format.cols"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb"

[intervar]
versions = ["intervar_20170202"]
func = "annotation.auto"
default.dbtype = ["sqlite"]

need.cols = ["chr", "start", "end", "ref", "alt"]
return.col.names = "{{anno.name}}"
db.col.order = [1, 2, 3, 4, 5]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start", "end", "ref", "alt"]
return.col.index = 6
format.dat.fun = "format.cols"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb"

[cadd]
versions = ["cadd", "caddgt10", "caddgt20", "cadd13", "cadd13gt10", "cadd13gt20"]
func = "annotation.auto"
default.dbtype = ["sqlite", "sqlite", "sqlite", "sqlite", "sqlite", "sqlite"]

need.cols = ["chr", "start", "end", "ref", "alt"]
return.col.names = ""
db.col.order = [1, 2, 3, 4, 5]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start", "end", "ref", "alt"]
return.col.index = ""
format.dat.fun = "format.cols"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb"

[nci60]
versions = ["nci60"]
func = "annotation.auto"
default.dbtype = ["txt"]

need.cols = ["chr", "start", "end", "ref", "alt"]
return.col.names = "{{anno.name}}"
db.col.order = [1, 2, 3, 4, 5]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start", "end", "ref", "alt"]
return.col.index = 6
format.dat.fun = "format.cols"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb"

[icgc]
versions = ["icgc21"]
func = "annotation.auto"
default.dbtype = ["sqlite"]

need.cols = ["chr", "start", "end", "ref", "alt"]
return.col.names = "{{anno.name}}_occurrence"
db.col.order = [1, 2, 3, 4, 5]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start", "end", "ref", "alt"]
return.col.index = 7
format.dat.fun = "format.cols"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb"

[dbnsfp]
versions = ["dbnsfp30a", "dbnsfp31a_interpro", "dbnsfp33a"]
func = "annotation.auto"
default.dbtype = ["sqlite", "sqlite", "sqlite"]

need.cols = ["chr", "start", "end", "ref", "alt"]
return.col.names = ""
db.col.order = [1, 2, 3, 4, 5]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start", "end", "ref", "alt"]
return.col.index = ""
format.dat.fun = "format.cols"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb"

[gme]
versions = ["gme"]
func = "annotation.auto"
default.dbtype = ["sqlite"]

need.cols = ["chr", "start", "end", "ref", "alt"]
return.col.names = ""
db.col.order = [1, 2, 3, 4, 5]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start", "end", "ref", "alt"]
return.col.index = ""
format.dat.fun = "format.cols"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb"

[hrcr1]
versions = ["hrcr1"]
func = "annotation.auto"
default.dbtype = ["sqlite"]

need.cols = ["chr", "start", "end", "ref", "alt"]
return.col.names = ""
db.col.order = [1, 2, 3, 4, 5]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start", "end", "ref", "alt"]
return.col.index = ""
format.dat.fun = "format.cols"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb"

[revel]
versions = ["revel"]
func = "annotation.auto"
default.dbtype = ["sqlite"]

need.cols = ["chr", "start", "end", "ref", "alt"]
return.col.names = ""
db.col.order = [1, 2, 3, 4, 5]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start", "end", "ref", "alt"]
return.col.index = ""
format.dat.fun = "format.cols"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb"

[mcap]
versions = ["mcap"]
func = "annotation.auto"
default.dbtype = ["sqlite"]

need.cols = ["chr", "start", "end", "ref", "alt"]
return.col.names = ""
db.col.order = [1, 2, 3, 4, 5]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start", "end", "ref", "alt"]
return.col.index = ""
format.dat.fun = "format.cols"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb"

[exac03]
versions = ["exac03", "exac03nontcga", "exac03nonpsych"]
func = "annotation.auto"
default.dbtype = ["sqlite", "sqlite", "sqlite"]

need.cols = ["chr", "start", "end", "ref", "alt"]
return.col.names = ""
db.col.order = [1, 2, 3, 4, 5]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start", "end", "ref", "alt"]
return.col.index = ""
format.dat.fun = "format.cols"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb"

[gnomad]
versions = ["gnomad_exome", "gnomad_genome"]
func = "annotation.auto"
default.dbtype = ["sqlite", "sqlite"]

need.cols = ["chr", "start", "end", "ref", "alt"]
return.col.names = ""
db.col.order = [1, 2, 3, 4, 5]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start", "end", "ref", "alt"]
return.col.index = ""
format.dat.fun = "format.cols"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb"

[kaviar]
versions = ["kaviar_20150923"]
func = "annotation.auto"
default.dbtype = ["sqlite"]

need.cols = ["chr", "start", "end", "ref", "alt"]
return.col.names = ""
db.col.order = [1, 2, 3, 4, 5]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start", "end", "ref", "alt"]
return.col.index = ""
format.dat.fun = "format.cols"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb"

[popfreq]
versions = ["popfreq_max_20150413", "popfreq_all_20150413"]
func = "annotation.auto"
default.dbtype = ["sqlite", "sqlite"]

need.cols = ["chr", "start", "end", "ref", "alt"]
return.col.names = ""
db.col.order = [1, 2, 3, 4, 5]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start", "end", "ref", "alt"]
return.col.index = ""
format.dat.fun = "format.cols"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb"

[gwava]
versions = ["gwava"]
func = "annotation.auto"
default.dbtype = ["sqlite"]

need.cols = ["chr", "start", "end", "ref", "alt"]
return.col.names = ""
db.col.order = [1, 2, 3, 4, 5]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start", "end", "ref", "alt"]
return.col.index = ""
format.dat.fun = "format.cols.plus.chr"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb"

[eigen]
versions = ["eigen"]
func = "annotation.auto"
default.dbtype = ["sqlite"]

need.cols = ["chr", "start", "end", "ref", "alt"]
return.col.names = "Eigen"
db.col.order = [1, 2, 3, 4, 5]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start", "end", "ref", "alt"]
return.col.index = 6
format.dat.fun = "format.cols"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb"

[refgene]
versions = ["ucsc_refgene", "ens_refgene"]
func = "annotation.auto"
default.dbtype = ["txt", "txt"]
is.region = true

need.cols = ["chr", "start", "end"]
return.col.names = ["Transcript","Gene"]
db.col.order = [3, 5, 6]
index.cols = ["chr", "start", "end"]
full.matched.cols = "chr"
inferior.col = "start"
superior.col = "end"
return.col.index = [2,13]
format.dat.fun = "format.cols.plus.chr"
setdb.fun = "set.db.refgene"
set.table.fun = "set.table.refgene"
format.db.tb.fun = "format.db.tb.unique"

[cscd_main]
versions = ["cscd_cancer_circrna", 
            "cscd_common_circrna", 
            "cscd_normal_circrna"]
func = "annotation.auto"
default.dbtype = ["!!glue {rep('sqlite', 3)}"]
is.region = true

need.cols = ["chr", "start", "end"]
return.col.names = ["cscd_main_info","cscd_main_tissue"]
db.col.order = [19, 20, 21]
index.cols = ["chr", "start", "end"]
full.matched.cols = "chr"
inferior.col = "start"
superior.col = "end"
return.col.index = [1,7]
format.dat.fun = "format.cols.plus.chr"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb.unique"

[epi_genes]
versions = ["epi_genes_v1"]
default.dbtype = ["txt"]
func = "annotation.auto"

need.cols = ["gene"]
return.col.names = ["{{anno.name}}_type", "{{anno.name}}_pmid"]
db.col.order = 1
index.cols = ["gene"]
matched.cols = ["gene"]
return.col.index = [2, 3]
format.dat.fun = "format.cols"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb.unique"

[varcards]
versions = ["varcards"]
default.dbtype = ["sqlite"]
func = "annotation.auto"

need.cols = ["chr", "start", "end", "ref", "alt"]
return.col.names = ""
db.col.order = [1, 2, 3, 4, 5]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start", "end", "ref", "alt"]
return.col.index = [7, 8, 9, 10, 11]
format.dat.fun = "format.cols.plus.chr"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb"

[hgnc_symbol_convert_1]
versions = ["hgnc_coding_gene2pre"]
default.dbtype = ["txt"]
func = "annotation.auto"

need.cols = ["gene"]
return.col.names = ["hgnc_alias_symbol", "hgnc_prev_name"]
db.col.order = 2
index.cols = ["gene"]
matched.cols = ["gene"]
return.col.index = [9, 11]
format.dat.fun = "format.cols"
setdb.fun = "set.db.hgnc.alias"
set.table.fun = "set.table.hgnc.alias"
format.db.tb.fun = "format.db.tb.unique"

[hgnc_symbol_convert_2]
versions = ["hgnc_coding_pre2gene"]
default.dbtype = ["txt"]
func = "annotation.auto"

need.cols = ["gene"]
return.col.names = ["hgnc_prev_name", "hgnc_alias_symbol"]
db.col.order = 11
index.cols = ["gene"]
matched.cols = ["gene"]
return.col.index = [2, 9]
format.dat.fun = "format.cols"
setdb.fun = "set.db.hgnc.alias"
set.table.fun = "set.table.hgnc.alias"
format.db.tb.fun = "format.db.tb.unique"

[brvar]
versions = ["BRVar_v1_core", "BRVar_v1_extra"]
default.dbtype = ["txt", "txt"]
func = "annotation.auto"

need.cols = ["chr", "start", "end", "ref", "alt"]
return.col.names = "{{anno.name}}_frq"
db.col.order = [1, 2, 3, 4, 5]
index.cols = ["chr", "start"]
matched.cols = ["chr", "start", "end", "ref", "alt"]
return.col.index = 6
format.dat.fun = "format.cols"
setdb.fun = "set.db"
set.table.fun = "set.table"
format.db.tb.fun = "format.db.tb"
